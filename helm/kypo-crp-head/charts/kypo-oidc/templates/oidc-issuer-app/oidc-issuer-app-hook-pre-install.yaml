{{- with .Values.oidcIssuerApp }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ .name }}-hook-preinstall
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  containers:
    - name: {{ .name }}-pre-install-job
      image: postgres:13-alpine
      imagePullPolicy: IfNotPresent
      command:
        - "/bin/bash"
        - "-c"
        - | {{- range $k, $v := $.Values.postgresServices }}
          PGPASSWORD={{ $.Values.global.postgres.password }} psql -h {{ $.Values.global.postgres.dns }} -p {{ $.Values.global.postgres.port }} -U {{ $.Values.global.postgres.user }} -c 'CREATE USER "{{ $v.dbUser }}";' 2> /dev/null
          PGPASSWORD={{ $.Values.global.postgres.password }} psql -h {{ $.Values.global.postgres.dns }} -p {{ $.Values.global.postgres.port }} -U {{ $.Values.global.postgres.user }} -c "ALTER USER \"{{ $v.dbUser }}\" PASSWORD '{{ $v.dbPassword }}';" 2> /dev/null
          PGPASSWORD={{ $.Values.global.postgres.password }} psql -h {{ $.Values.global.postgres.dns }} -p {{ $.Values.global.postgres.port }} -U {{ $.Values.global.postgres.user }} -c 'CREATE DATABASE "{{ $v.dbName }}" OWNER "{{ $v.dbUser }}";' 2> /dev/null
          {{- end }}
          exit 0
  restartPolicy: Never
  terminationGracePeriodSeconds: 0
{{- end }}
